{
  "openapi": "3.0.0",
  "info": {
    "title": "HELPER",
    "description": "Mobile App"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "paths": {
    "/user/signup": {
      "post": {
        "summary": "Create a new user",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Name": {
                    "type": "string"
                  },
                  "Email": {
                    "type": "string",
                    "format": "email"
                  },
                  "Password": {
                    "type": "string"
                  },
                  "ConfirmPassword": {
                    "type": "string"
                  },
                  "PhoneContact": {
                    "type": "string",
                    "pattern": "^\\d+$"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User created successfully"
          },
          "400": {
            "description": "Invalid input data"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/user/add/{googleId}": {
      "patch": {
        "summary": "Add phone contact",
        "tags": [
          "Authentication"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "googleId",
            "required": true,
            "description": "The ID of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "PhoneContact": {
                    "type": "string",
                    "pattern": "^\\d+$",
                    "description": "The new phone contact of the user"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User phone contact added successfully"
          },
          "400": {
            "description": "Invalid user ID"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "summary": "Authenticate user",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Email": {
                    "type": "string",
                    "format": "email"
                  },
                  "Password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authentication successful"
          },
          "400": {
            "description": "Missing credentials or invalid email/password format"
          },
          "401": {
            "description": "User not found or wrong password"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/user/forgot_password_1": {
      "post": {
        "summary": "Forgot Password (1)",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Email": {
                    "type": "string",
                    "format": "email"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email found, proceed to next step",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "userId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Email is required"
          },
          "404": {
            "description": "Email not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/user/forgot_password_3/{userId}": {
      "post": {
        "summary": "Forgot Password (3)",
        "tags": [
          "Authentication"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "The ID of the user to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "newPassword": {
                    "type": "string"
                  },
                  "confirmNewPassword": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password updated successfully"
          },
          "400": {
            "description": "Bad request (e.g., passwords do not match, missing parameters)"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/user/newRequest": {
      "post": {
        "summary": "New Request",
        "tags": [
          "Requests"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "UserID": {
                    "type": "string"
                  },
                  "Timestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "Location": {
                    "type": "object",
                    "properties": {
                      "latitude": {
                        "type": "number"
                      },
                      "longitude": {
                        "type": "number"
                      }
                    }
                  },
                  "VolunteerID": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request added successfuly"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/user/requests/{userId}": {
      "get": {
        "summary": "Get request information",
        "tags": [
          "Requests"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "The ID of the user to retrieve the request for",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "RequestID": {
                      "type": "string",
                      "description": "The ID of the request"
                    },
                    "Location": {
                      "type": "string",
                      "description": "The address of the request location"
                    },
                    "Status": {
                      "type": "string",
                      "description": "The status of the request"
                    },
                    "Timestamp": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of when the request was made"
                    },
                    "VolunteerName": {
                      "type": "string",
                      "description": "The name of the volunteer assigned to the request"
                    },
                    "VolunteerPhoneContact": {
                      "type": "string",
                      "description": "The phone contact of the volunteer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid user ID"
          },
          "404": {
            "description": "Request not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/user/updateRequest/{requestId}": {
      "patch": {
        "summary": "Update request status",
        "tags": [
          "Requests"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "requestId",
            "required": true,
            "description": "The ID of the request to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Status": {
                    "type": "string",
                    "description": "The new status of the request"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request updated successfully"
          },
          "400": {
            "description": "Invalid request ID"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/user/review/{userId}": {
      "post": {
        "summary": "Create a review for the most recent request of a user",
        "tags": [
          "Requests"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "The ID of the user submitting the review",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Feedback": {
                    "type": "string",
                    "description": "Feedback provided by the user"
                  },
                  "Rating": {
                    "type": "number",
                    "description": "Rating given by the user (e.g., from 1 to 10)"
                  }
                },
                "required": [
                  "Feedback",
                  "Rating"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Review added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Review added successfully."
                    },
                    "RequestID": {
                      "type": "string",
                      "description": "The ID of the request that was reviewed"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, missing or invalid parameters"
          },
          "404": {
            "description": "No requests found for this user"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/user/finished_request/{requestId}": {
      "get": {
        "summary": "Get finished request details and review information",
        "tags": [
          "Requests"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "requestId",
            "required": true,
            "description": "The ID of the request to fetch details for",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request details and review retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Timestamp": {
                      "type": "string",
                      "description": "The timestamp of when the request was made"
                    },
                    "Status": {
                      "type": "string",
                      "description": "The status of the request"
                    },
                    "AcceptedTime": {
                      "type": "string",
                      "description": "The time when the request was accepted"
                    },
                    "FinishedTime": {
                      "type": "string",
                      "description": "The time when the request was finished"
                    },
                    "Duration": {
                      "type": "string",
                      "description": "The total duration of the request"
                    },
                    "Location": {
                      "type": "string",
                      "description": "The address of the request location"
                    },
                    "VolunteerName": {
                      "type": "string",
                      "description": "The name of the volunteer who received the review"
                    },
                    "Review": {
                      "type": "object",
                      "description": "The review details for the request (if available)",
                      "properties": {
                        "Feedback": {
                          "type": "string",
                          "description": "The feedback given by the user"
                        },
                        "Rating": {
                          "type": "number",
                          "description": "The rating given by the user (1-5)"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or request is not in a finished state"
          },
          "404": {
            "description": "Request not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/user/profile/{userId}": {
      "get": {
        "summary": "Get user information",
        "tags": [
          "Profile"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "The ID of the user to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Email": {
                      "type": "string",
                      "description": "The email of the user"
                    },
                    "Name": {
                      "type": "string",
                      "description": "The name of the user"
                    },
                    "PhoneContact": {
                      "type": "string",
                      "description": "The password of the user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid user ID"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/user/updateProfile/{userId}": {
      "patch": {
        "summary": "Update name and phone contact",
        "tags": [
          "Profile"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "The ID of the user to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Name": {
                    "type": "string",
                    "description": "The new name of the user"
                  },
                  "PhoneContact": {
                    "type": "string",
                    "pattern": "^\\d+$",
                    "description": "The new phone contact of the user"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User data updated successfully"
          },
          "400": {
            "description": "Invalid user ID or phone number"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/user/updatePassword/{userId}": {
      "patch": {
        "summary": "Update password",
        "tags": [
          "Profile"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "The ID of the user to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "newPassword": {
                    "type": "string"
                  },
                  "confirmNewPassword": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password updated successfully"
          },
          "400": {
            "description": "Invalid user ID or password format"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/user/delete": {
      "delete": {
        "summary": "Delete a user by ID",
        "tags": [
          "Profile"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "userID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the user to be deleted"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "400": {
            "description": "Invalid user ID"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/user/history/{userId}": {
      "get": {
        "summary": "Get user's request history ordered by most recent",
        "tags": [
          "Requests"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "The ID of the user to fetch request history",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user's request history retrieved successfully, ordered by most recent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "Array of requests ordered by most recent",
                  "items": {
                    "type": "object",
                    "properties": {
                      "RequestID": {
                        "type": "string",
                        "description": "The ID of the request"
                      },
                      "Address": {
                        "type": "string",
                        "description": "The address of the request location"
                      },
                      "Status": {
                        "type": "string",
                        "description": "The status of the request"
                      },
                      "Timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp of the request"
                      },
                      "Duration": {
                        "type": "string",
                        "description": "The duration of the request"
                      },
                      "VolunteerName": {
                        "type": "string",
                        "description": "The name of the volunteer assigned to the request"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid userId"
          },
          "404": {
            "description": "No requests found for the user"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/user/logout/{userId}": {
      "post": {
        "summary": "Logout a user",
        "tags": [
          "Authentication"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "ID of the user to log out",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Logged out successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Logged out successfully."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request if userId is invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid userId"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found if userId does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/volunteer/signup": {
      "post": {
        "summary": "Create a new volunteer",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Name": {
                    "type": "string"
                  },
                  "Email": {
                    "type": "string",
                    "format": "email"
                  },
                  "Password": {
                    "type": "string"
                  },
                  "ConfirmPassword": {
                    "type": "string"
                  },
                  "PhoneContact": {
                    "type": "string",
                    "pattern": "^\\d+$"
                  },
                  "Location": {
                    "type": "object",
                    "properties": {
                      "latitude": {
                        "type": "number"
                      },
                      "longitude": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Volunteer created successfully"
          },
          "400": {
            "description": "Invalid input data"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/volunteer/add/{volunteerId}": {
      "patch": {
        "summary": "Add phone contact",
        "tags": [
          "Authentication"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "volunteerId",
            "required": true,
            "description": "The ID of the volunteer",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "PhoneContact": {
                    "type": "string",
                    "pattern": "^\\d+$",
                    "description": "The new phone contact of the volunteer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Volunteer phone contact added successfully"
          },
          "400": {
            "description": "Invalid volunteer ID"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/volunteer/login": {
      "post": {
        "summary": "Authenticate volunteer",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Email": {
                    "type": "string",
                    "format": "email"
                  },
                  "Password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authentication successful"
          },
          "400": {
            "description": "Missing credentials or invalid email/password format"
          },
          "401": {
            "description": "Volunteer not found or wrong password"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/volunteer/forgot_password_1": {
      "post": {
        "summary": "Forgot Password (1)",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Email": {
                    "type": "string",
                    "format": "email"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email found, proceed to next step",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "volunteerId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Email is required"
          },
          "404": {
            "description": "Email not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/volunteer/forgot_password_3/{volunteerId}": {
      "post": {
        "summary": "Forgot Password (3)",
        "tags": [
          "Authentication"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "volunteerId",
            "required": true,
            "description": "The ID of the volunteer to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "newPassword": {
                    "type": "string"
                  },
                  "confirmNewPassword": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password updated successfully"
          },
          "400": {
            "description": "Bad request (e.g., passwords do not match, missing parameters)"
          },
          "404": {
            "description": "Volunteer not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/volunteer/activeRequests/{volunteerId}": {
      "post": {
        "summary": "Get all active requests with status 'pendent' for a volunteer",
        "tags": [
          "Requests"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "volunteerId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the volunteer to get active requests for"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "latitude": {
                    "type": "number"
                  },
                  "longitude": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A list of active requests with user names, time elapsed, and distance from volunteer, along with city and country of the volunteer's location",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "city": {
                      "type": "string",
                      "description": "The city where the volunteer is located"
                    },
                    "country": {
                      "type": "string",
                      "description": "The country where the volunteer is located"
                    },
                    "activeRequests": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The request ID"
                          },
                          "userName": {
                            "type": "string",
                            "description": "The name of the user who made the request"
                          },
                          "timeElapsed": {
                            "type": "string",
                            "description": "The time elapsed since the request was made, in minutes, hours, or days"
                          },
                          "distance": {
                            "type": "string",
                            "description": "The distance in kilometers between the volunteer and the request location"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, possibly due to invalid volunteer ID or location data"
          },
          "404": {
            "description": "Volunteer location not found or no active requests found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/volunteer/activeRequestsALL/{volunteerId}": {
      "get": {
        "summary": "Get all active requests with status 'pendent'",
        "tags": [
          "Requests"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "volunteerId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the volunteer to calculate the distance and fetch relevant data"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of active requests with user names, time elapsed, and distance from volunteer",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The request ID"
                      },
                      "userName": {
                        "type": "string",
                        "description": "The name of the user who made the request"
                      },
                      "timeElapsed": {
                        "type": "string",
                        "description": "The time elapsed since the request was made, in minutes or hours"
                      },
                      "distance": {
                        "type": "string",
                        "description": "The distance in kilometers between the volunteer and the request location"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/volunteer/request_info/{volunteerId}/{requestId}": {
      "get": {
        "summary": "Get request information including user name, time elapsed, distance, status, and Google Maps link",
        "tags": [
          "Requests"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "volunteerId",
            "required": true,
            "description": "The ID of the volunteer whose location will be used to calculate the distance",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "requestId",
            "required": true,
            "description": "The ID of the request to retrieve the information for",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "RequestID": {
                      "type": "string",
                      "description": "The ID of the request"
                    },
                    "Distance": {
                      "type": "string",
                      "description": "The distance in kilometers between the volunteer and the request location"
                    },
                    "Status": {
                      "type": "string",
                      "description": "The current status of the request"
                    },
                    "TimeElapsed": {
                      "type": "string",
                      "description": "The time elapsed since the request was made (in minutes, hours, or days)"
                    },
                    "UserName": {
                      "type": "string",
                      "description": "The name of the user who made the request"
                    },
                    "MapLink": {
                      "type": "string",
                      "description": "A Google Maps link to the request's location"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid volunteerId or requestId"
          },
          "404": {
            "description": "Request or volunteer location not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/volunteer/requests/{volunteerId}": {
      "get": {
        "summary": "Get request information by volunteer ID",
        "tags": [
          "Requests"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "volunteerId",
            "required": true,
            "description": "The ID of the volunteer to retrieve the request for",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "RequestID": {
                      "type": "string",
                      "description": "The ID of the request"
                    },
                    "Status": {
                      "type": "string",
                      "description": "The status of the request"
                    },
                    "Timestamp": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of when the request was made"
                    },
                    "UserName": {
                      "type": "string",
                      "description": "The name of the user who made the request"
                    },
                    "UserPhoneContact": {
                      "type": "string",
                      "description": "The phone contact of the user"
                    },
                    "MapLink": {
                      "type": "string",
                      "description": "The Google Maps link to the request location"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message indicating the status of the request (e.g., \"The request was cancelled\" or \"There is no ongoing request for this volunteer.\")"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid volunteer ID"
          },
          "404": {
            "description": "Request not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/volunteer/updateRequest/{requestId}": {
      "patch": {
        "summary": "Update request status or add volunteer",
        "tags": [
          "Requests"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "requestId",
            "required": true,
            "description": "The ID of the request to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Status": {
                    "type": "string",
                    "description": "The new status of the request"
                  },
                  "VolunteerID": {
                    "type": "string",
                    "description": "The ID of the volunteer to be assigned to the request"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request updated successfully"
          },
          "400": {
            "description": "Invalid request ID"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/volunteer/request_points_badges/{requestId}": {
      "get": {
        "summary": "Retrieve total points and badges",
        "tags": [
          "Requests"
        ],
        "description": "Calculates and updates the total points and badges for a volunteer based on the specified request.",
        "parameters": [
          {
            "in": "path",
            "name": "requestId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the request"
          }
        ],
        "responses": {
          "200": {
            "description": "Points and badges updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "points": {
                      "type": "integer"
                    },
                    "badges": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid requestId, request is not finished, or volunteer not assigned to request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Request not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/volunteer/finished_request/{requestId}": {
      "get": {
        "summary": "Get finished request details and review information",
        "tags": [
          "Requests"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "requestId",
            "required": true,
            "description": "The ID of the request to fetch details for",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request details and review retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Timestamp": {
                      "type": "string",
                      "description": "The timestamp of when the request was made"
                    },
                    "Status": {
                      "type": "string",
                      "description": "The status of the request"
                    },
                    "AcceptedTime": {
                      "type": "string",
                      "description": "The time when the request was accepted"
                    },
                    "FinishedTime": {
                      "type": "string",
                      "description": "The time when the request was finished"
                    },
                    "Duration": {
                      "type": "string",
                      "description": "The total duration of the request"
                    },
                    "Location": {
                      "type": "string",
                      "description": "The address of the request location"
                    },
                    "UserName": {
                      "type": "string",
                      "description": "The name of the user who left the review"
                    },
                    "Review": {
                      "type": "object",
                      "description": "The review details for the request (if available)",
                      "properties": {
                        "Feedback": {
                          "type": "string",
                          "description": "The feedback given by the user"
                        },
                        "Rating": {
                          "type": "number",
                          "description": "The rating given by the user (1-5)"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or request is not in a finished state"
          },
          "404": {
            "description": "Request not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/volunteer/reviews/{volunteerId}": {
      "get": {
        "summary": "Get all reviews for a volunteer",
        "tags": [
          "Profile"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "volunteerId",
            "required": true,
            "description": "The ID of the volunteer to get reviews for",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of reviews for the volunteer",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "UserName": {
                        "type": "string",
                        "description": "The name of the user who gave the review"
                      },
                      "Feedback": {
                        "type": "string",
                        "description": "The feedback given by the user"
                      },
                      "Rating": {
                        "type": "number",
                        "description": "The rating given by the user"
                      },
                      "RequestID": {
                        "type": "string",
                        "description": "The ID of the request associated with the review"
                      },
                      "RequestDate": {
                        "type": "string",
                        "description": "The date (day, month, year) when the associated request was made"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid volunteer ID"
          },
          "404": {
            "description": "No reviews found for this volunteer"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/volunteer/profile/{volunteerId}": {
      "get": {
        "summary": "Get volunteer's profile information and average rating",
        "tags": [
          "Profile"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "volunteerId",
            "required": true,
            "description": "The ID of the volunteer to fetch profile information",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Volunteer's profile information and average rating retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Email": {
                      "type": "string",
                      "description": "The email of the volunteer"
                    },
                    "Location": {
                      "type": "object",
                      "properties": {
                        "latitude": {
                          "type": "number",
                          "description": "Latitude of the volunteer's location"
                        },
                        "longitude": {
                          "type": "number",
                          "description": "Longitude of the volunteer's location"
                        }
                      }
                    },
                    "Name": {
                      "type": "string",
                      "description": "The name of the volunteer"
                    },
                    "PhoneContact": {
                      "type": "string",
                      "description": "The phone contact of the volunteer"
                    },
                    "averageRating": {
                      "type": "number",
                      "description": "The average rating of the volunteer"
                    },
                    "Points": {
                      "type": "number",
                      "description": "The total points of the volunteer"
                    },
                    "Badges": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "List of badges the volunteer has"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid volunteerId"
          },
          "404": {
            "description": "Volunteer not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/volunteer/updateProfile/{volunteerId}": {
      "patch": {
        "summary": "Update name and phone contact",
        "tags": [
          "Profile"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "volunteerId",
            "required": true,
            "description": "The ID of the volunteer to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Name": {
                    "type": "string",
                    "description": "The new name of the volunteer"
                  },
                  "PhoneContact": {
                    "type": "string",
                    "pattern": "^\\d+$",
                    "description": "The new phone contact of the volunteer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User data updated successfully"
          },
          "400": {
            "description": "Invalid volunteer ID or phone number"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/volunteer/updatePassword/{volunteerId}": {
      "patch": {
        "summary": "Update password",
        "tags": [
          "Profile"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "volunteerId",
            "required": true,
            "description": "The ID of the volunteer to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "newPassword": {
                    "type": "string"
                  },
                  "confirmNewPassword": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password updated successfully"
          },
          "400": {
            "description": "Invalid volunteer ID or password format"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/volunteer/delete": {
      "delete": {
        "summary": "Delete a volunteer by ID",
        "tags": [
          "Profile"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "volunteerID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the volunteer to be deleted"
          }
        ],
        "responses": {
          "200": {
            "description": "Volunteer deleted successfully"
          },
          "400": {
            "description": "Invalid volunteer ID"
          },
          "404": {
            "description": "Volunteer not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/volunteer/history/{volunteerId}": {
      "get": {
        "summary": "Get volunteer's request history ordered by most recent",
        "tags": [
          "Requests"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "volunteerId",
            "required": true,
            "description": "The ID of the volunteer to fetch request history",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Volunteer's request history retrieved successfully, ordered by most recent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "Array of requests ordered by most recent",
                  "items": {
                    "type": "object",
                    "properties": {
                      "RequestID": {
                        "type": "string",
                        "description": "The ID of the request"
                      },
                      "Address": {
                        "type": "string",
                        "description": "The address of the request location"
                      },
                      "Status": {
                        "type": "string",
                        "description": "The status of the request"
                      },
                      "Timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp of the request"
                      },
                      "Duration": {
                        "type": "string",
                        "description": "The duration of the request"
                      },
                      "UserName": {
                        "type": "string",
                        "description": "The name of the user assigned to the request"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid volunteerId"
          },
          "404": {
            "description": "No requests found for the volunteer"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/volunteer/logout/{userId}": {
      "post": {
        "summary": "Logout a volunteer",
        "tags": [
          "Authentication"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "volunteerId",
            "required": true,
            "description": "ID of the volunteer to log out",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Logged out successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Logged out successfully."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request if userId is invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid userId"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found if volunteerId does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Volunteer not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserData": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "Email": {
            "type": "string"
          },
          "Password": {
            "type": "string"
          },
          "PhoneContact": {
            "type": "string"
          }
        }
      },
      "VolunteerData": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "Email": {
            "type": "string"
          },
          "Password": {
            "type": "string"
          },
          "PhoneContact": {
            "type": "string"
          },
          "Token": {
            "tyoe": "string"
          }
        }
      },
      "RequestData": {
        "type": "object",
        "properties": {
          "Location": {
            "type": "object",
            "properties": {
              "latitude": {
                "type": "number"
              },
              "longitude": {
                "type": "number"
              }
            }
          },
          "Timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "UserID": {
            "type": "string"
          },
          "Status": {
            "type": "string"
          },
          "VolunteerID": {
            "type": "string"
          }
        }
      },
      "ReviewData": {
        "type": "object",
        "properties": {
          "Feedback": {
            "type": "string"
          },
          "Rating": {
            "type": "number"
          },
          "UserID": {
            "type": "string"
          },
          "VolunteerID": {
            "type": "string"
          },
          "RequestID": {
            "type": "string"
          }
        }
      },
      "LocationVolunteer": {
        "type": "object",
        "properties": {
          "Location": {
            "type": "object",
            "properties": {
              "latitude": {
                "type": "number"
              },
              "longitude": {
                "type": "number"
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "Operations related to user authentication"
    },
    {
      "name": "Requests",
      "description": "Operations related to user requests"
    },
    {
      "name": "Profile",
      "description": "Operations related to user profile"
    }
  ]
}